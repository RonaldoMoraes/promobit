# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    jwt_secret: '%env(string:JWT_SECRET)%'
    # jwt_secret: SOME_SECRET
    # mongodb_server: "mongodb://localhost:27017"
    mongodb_server: "%env(string:MONGODB_URL)%"
    # mongodb_server: "mongodb://symfony:symfony@localhost:27018/test_database"
    # env(MONGODB_URL): "mongodb://symfony:symfony@localhost:27018/test_database"
    # env(MONGODB_URL): ''
    # env(MONGODB_USERNAME): 'symfony'
    # env(MONGODB_PASSWORD): 'symfony'
    # env(MONGODB_DB): 'test_database'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Redis:
        # you can also use \RedisArray, \RedisCluster or \Predis\Client classes
        class: Redis
        calls:
            - connect:
                - '%env(REDIS_HOST)%'
                - '%env(int:REDIS_PORT)%'
            - auth:
                - '%env(REDIS_PASSWORD)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
            # you can optionally pass an array of options. The only option is 'prefix',
            # which defines the prefix to use for the keys to avoid collision on the Redis server
            - { prefix: '' }